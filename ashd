local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "ScriptWave",
    LoadingTitle = "ScriptWave",
    LoadingSubtitle = "by Devidk",
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "ScriptWave Hub"
    },
    Discord = {
       Enabled = false,
       Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
    KeySystem = True, -- Set this to true to use our key system
    KeySettings = {
       Title = "Untitled",
       Subtitle = "Key System",
       Note = "Key: ScriptWave",
       FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"ScriptWave"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
 })

 local PlayerTab = Window:CreateTab("Player", 4483362458) -- Title, Image

 local Slider = PlayerTab:CreateSlider({
    Name = "JumpHeight",
    Range = {50, 500},
    Increment = 1,
    Suffix = "Height",
    CurrentValue = 10,
    Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
     game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
    end,
   })
    local Slider = PlayerTab:CreateSlider({
      Name = "WalkSpeed",
      Range = {16, 500},
      Increment = 1,
      Suffix = "Speed",
      CurrentValue = 10,
      Flag = "Slider2", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
      Callback = function(Value)
      game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
      end,
})   
 
 local ScriptsTab = Window:CreateTab("ScriptsLoader", 4483362458) -- Title, Image

 local Button = ScriptsTab:CreateButton({
    Name = "InfyieldLoader",
    Callback = function(v)
        loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
    end,
 })
    local Button = ScriptsTab:CreateButton({
      Name = "Nuthub",
      Callback = function(v)
         loadstring(game:HttpGet("https://raw.githubusercontent.com/01iq/scripthub/refs/heads/main/solara",true))()
      end,
  })
      local Button = ScriptsTab:CreateButton({
         Name = "Vapev4",
         Callback = function(v)
            loadstring(game:HttpGet("https://raw.githubusercontent.com/7GrandDadPGN/VapeV4ForRoblox/main/NewMainScript.lua", true))()
         end,
 })

 local BalantTab = Window:CreateTab("Balant", 4483362458) -- Title, Image

 local Toggle = BalantTab:CreateToggle({
   Name = "InfJump",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(InfiniteJumpEnabled)
      local InfiniteJumpEnabled = true
      game:GetService("UserInputService").JumpRequest:connect(function()
          if InfiniteJumpEnabled then
              game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
          end
      end)
  end,
})
local Toggle = BalantTab:CreateToggle({
   Name = "Fly",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
      loadstring(game:HttpGet("https://pastebin.com/raw/S5TYmnTm", true))()
   end,
})
