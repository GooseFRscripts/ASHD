local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "ScriptWave | UI Rewrite, adding more soon.",
    Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
    LoadingTitle = "Loading",
    LoadingSubtitle = "By Devidk",
    Theme = "Ocean", -- 
 
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface
 
    ConfigurationSaving = {
       Enabled = true,
       FolderName = ScriptWave, -- Create a custom folder for your hub/game
       FileName = "ScriptWave Hub"
    },
 
    Discord = {
       Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
       Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
 
    KeySystem = false, -- Set this to true to use our key system
    KeySettings = {
       Title = "Untitled",
       Subtitle = "Key System",
       Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
       FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
 })

 local CombatTab = Window:CreateTab("Combat", 4483362458) -- Title, Image

 local Label = CombatTab:CreateLabel("IN WIP")

 local Toggle = CombatTab:CreateToggle({
     Name = "Killaura",
     CurrentValue = false,
     Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
     Callback = function(Value)
     Print("Not working currently please wait as we add this.")
     end,
 })
 local BalantTab = Window:CreateTab("Balant", 4483362458) -- Title, Image

 local Slider = BalantTab:CreateSlider({
     Name = "JumpHeight",
     Range = {50, 500},
     Increment = 1,
     Suffix = "Height",
     CurrentValue = 10,
     Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
     Callback = function(Value)
     game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
     end,
 })
     local Slider = BalantTab:CreateSlider({
     Name = "WalkSpeed",
     Range = {16, 500},
     Increment = 1,
     Suffix = "Speed",
     CurrentValue = 22,
     Flag = "Slider2", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
     Callback = function(Value)
     game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
     end,
 })  
     local Toggle = BalantTab:CreateToggle({
         Name = "Fly",
         CurrentValue = false,
         Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
         Callback = function(Value)
         loadstring(game:HttpGet("https://pastebin.com/raw/S5TYmnTm", true))()
         end,
     })    
         local Toggle = BalantTab:CreateToggle({
             Name = "InfJump",
             CurrentValue = false,
             Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
             Callback = function(InfiniteJumpEnabled)
             local InfiniteJumpEnabled = true
             game:GetService("UserInputService").JumpRequest:connect(function()
                 if InfiniteJumpEnabled then
                     game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
                 end
             end)
         end,
         })


         local RenderTab = Window:CreateTab("Render", 4483362458) -- Title, Image

         local Button = RenderTab:CreateButton({
             Name = "Esp",
             Callback = function()
                 loadstring(game:HttpGet("https://pastebin.com/raw/7K1Jhmck"))()
             end,
         })

 local ScriptsTab = Window:CreateTab("ScriptsLoader", 4483362458) -- Title, Image

 local Button = ScriptsTab:CreateButton({
     Name = "InfyieldLoader",
     Callback = function(v)
         loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
     end,
 })
     local Button = ScriptsTab:CreateButton({
     Name = "Nuthub",
     Callback = function(v)
         loadstring(game:HttpGet("https://raw.githubusercontent.com/01iq/scripthub/refs/heads/main/solara",true))()
     end,
 })
 local Button = ScriptsTab:CreateButton({
     Name = "Aurora|Bedwars Script!",
     Callback = function(v)
        loadstring(game:HttpGet('https://raw.githubusercontent.com/cocotv666/Aurora/refs/heads/main/Aurora_Loader'))()
     end,
  })

  local Button = ScriptsTab:CreateButton({
    Name = "VapeV4|Bedwars Script!",
    Callback = function(v)
       print("adding soon.")
    end,
 })

 local ExtraTab = Window:CreateTab("ExtraScripts", 4483362458) -- Title, Image

local Button = ExtraTab:CreateButton({
Name = "UNC Test",
Callback = function()
  loadstring(game:HttpGet("https://raw.githubusercontent.com/unified-naming-convention/NamingStandard/main/UNCCheckEnv.lua", true))()
end,
})


local CreditsTab = Window:CreateTab("Credits And Info", 4483362458) -- Title, Image

local Label = CreditsTab:CreateLabel("Fully Scripted By Devidk And RayField")
local Label = CreditsTab:CreateLabel("More updates to Balant, Player soon and Settings!")
local Label = CreditsTab:CreateLabel("UI was made by Rayfield.")


local SettingsTab = Window:CreateTab("Settings", 4483362458) -- Title, Image

local Dropdown = SettingsTab:CreateDropdown({
    Name = "GUI Themes",
    Options = {"Ocean", "Default"}, -- List of themes
    CurrentOption = "Ocean", -- Default option
    MultipleOptions = false, -- Single selection only
    Flag = "Dropdown1", -- Unique identifier
    Callback = function(selectedOption)
      
        end
    end,
})





local Label = SettingsTab:CreateLabel("This Tab is currently Being worked on!")

Rayfield:LoadConfiguration()
